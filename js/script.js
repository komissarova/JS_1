let Tc;
let Tf;
Tc = 30;
Tf = (9/5)*Tc + 32;
alert(Tf);

let admin;
let name;
name = "Василий";
admin = name;
console.log(admin);

var a = 10 + 10 + "10";    
/* вычисление идёт слева направо: числа 10 в сумме дают 20; затем число 20 преобразуется в строку; затем бинарный оператор "+" склеивает две строки в одну: "2010"*/

var b = 10 + "10" + 10;    // числа преобразуются в строки, строки склеиваются в одну: "101010"
 
var c = 10 + 10 + + "10";  
/* сначала унарный оператор "+" преобразует строку "10" в число 10, затем бинарный оператор "+"производит арифметическое сложение 3-х чисел 10: результат - число 30*/

var d = 10/-"";            
//пустая строка превратилась в ноль, деление на ноль даёт Infinity, отрицательный ноль дал -Infinity 

var e = 10/+ "2,5";        
/* если писать строку "2,5" с запятой, то результат будет NaN, т.к. JS не сможет преобразовать такую строку в число из-за того, что в англо-американской традиции дробные числа пишутся с точкой. Если написать строку с точкой, то результат будет равен цифре 4 (строка преобразуется в число, 10 делится на 2.5)*/
console.log(a, b, c, d, e);

/*
let mode = "normal";     // корректное, т.к. начинается с буквы и не зарезервированно
let my_valu3 = 102;      // корректное, т.к. начинается с буквы и не зарезервированно
let 3my_value3 = "102";  // некорректное, т.к. начинается с цифры
let __hello__ = "world"; // корректное, т.к. начинается с знака подчёркивания
let $$$ = "money";       // корректное, т.к. начинается с знака доллара
let !0_world = true;     
// некорректное, т.к. начинается со знака препинания, который служит в JS логическим оператором
*/
